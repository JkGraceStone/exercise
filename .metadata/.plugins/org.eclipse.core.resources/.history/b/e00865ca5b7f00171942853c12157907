package leet.array;

import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.io.Reader;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

/**
 * @author jkb
 */
public class Xym {
	/**
	 * 功能：Java读取txt文件的内容 步骤：1：先获得文件句柄 2：获得文件句柄当做是输入一个字节码流，需要对这个输入流进行读取
	 * 3：读取到输入流后，需要读取生成字节流 4：一行一行的输出。readline()。 备注：需要考虑的是异常情况
	 * 
	 * @param filePath
	 */
	public static void readTxtFile(String filePath) {
		try {
			String encoding = "GBK";
			File file = new File(filePath);
			if (file.isFile() && file.exists()) { // 判断文件是否存在
				InputStreamReader read = new InputStreamReader(
						new FileInputStream(file), encoding);// 考虑到编码格式
				BufferedReader bufferedReader = new BufferedReader(read);
				String lineTxt = null;
				lineTxt = bufferedReader.readLine();
				int i =2;
				List<Person> list1 = new ArrayList<Person>();
				List<Person> list2 = new ArrayList<Person>();
				while ((lineTxt = bufferedReader.readLine()) != null) {
					System.out.println(lineTxt);
					String s1 = lineTxt;
					String[] strings =s1.split("\t");
					if(i%2==0){
					
					for (int j = 0; j < strings.length; j++) {
						System.out.println(strings[j]);
						String s2 = strings[j].substring(1 , strings[j].length() - 1);
						String[] para=s2.split(",");
//						for(String s:para){
//							System.out.println(s);
//						}
						Person person = new Person();
						person.setName(para[0]);
						person.setS(Double.parseDouble(para[1]));
						person.setC(Double.parseDouble(para[2]));
						list1.add(person);
					}
					}else {
						for (int j = 0; j < strings.length; j++) {
							System.out.println(strings[j]);
							String s2 = strings[j].substring(1 , strings[j].length() - 1);
							String[] para=s2.split(",");
//							for(String s:para){
//								System.out.println(s);
//							}
							Person person = new Person();
							person.setName(para[0]);
							person.setS(Double.parseDouble(para[1]));
							person.setC(Double.parseDouble(para[2]));
							list1.add(person);
					}
					
				}
				System.out.print(list1);
				read.close();
			} else {
				System.out.println("找不到指定的文件");
			}
		} catch (Exception e) {
			System.out.println("读取文件内容出错");
			e.printStackTrace();
		}

	}

	public static void main(String argv[]) {
		String filePath = "D:\\SoftWare\\eclipse\\com.jiang.test\\JavaData\\src\\加权求和测试数据.txt";
		// "res/";
		readTxtFile(filePath);
	}

}

class Person {

	String name;

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	double s;
	double c;

	public double getS() {
		return s;
	}

	public void setS(double s) {
		this.s = s;
	}

	public double getC() {
		return c;
	}

	public void setC(double c) {
		this.c = c;
	}

}
/*
 * 删除字符串最后一个字符的几种方法
 * 
 * 偶然看到的，记录一下，以免忘记
 * 
 * 字符串：string s = "1,2,3,4,5,"
 * 
 * 目标：删除最后一个 ","
 * 
 * 方法： 1、用的最多的是Substring，这个也是我一直用的
 * 
 * 
 * s = s.Substring(0,s.Length - 1)
 * 
 * 
 * 2、用 RTrim，这个我原来只知道用来删除最后的空格，也没有仔细看过其它的用法，才发现可以直接trim掉一些字符
 * 
 * 
 * s = s.ToString().RTrim(',')
 * 
 * 3、用TrimEnd,这个东西和RTrim差不多，区别是这个传递的是一个字符数组，而RTrim可以是任何有效的字符串
 * 
 * 
 * s=s.TrimEnd(',') //如果要删除"5,"，则需要这么写 char[] MyChar = {'5',','}; s =
 * s.TrimEnd(MyChar); //s = "1,2,3,4"
 * 
 * ======================================================== Map<String,String>
 * paraMap=new HashMap<String,String>(); String
 * str="name=zhang,age=30,sex=male"; String[] para=str.split(","); for(int
 * i=0,len=para.length;i<len;i++){ String[] temp=para[i].split("=");
 * paraMap.put(temp[0], temp[1]); } Person p=new Person();
 * p.setName(paraMap.get("name"));
 */