package HuaWei;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class ZWei {
	/** 请完成下面这个函数，实现题目要求的功能 **/
	 /** 当然，你也可以不按照这个模板来作答，完全按照自己的想法来 ^-^  **/
	    static int findCircleNum(int[][] M) {

	    	return 0;
	    }
	  //遍历图
		static void DeepTraOne(Integer[][] g,int n){//从第n个节点开始遍历
			int i;
			g.isTrav[n] = 1;              //标记为1表示该顶点已经被处理过
			System.out.println("―>" + g.Vertex[n]); //输出节点数据
			//添加处理节点的操作
			for(i = 0; i< g.VertxNum; i++)
			{
				//if(g.EdgeWeight[n][i] != g.MaxValue && g.isTrav[n] == 0)
	                        if(g.EdgeWeight[n][i] != g.MaxValue && g.isTrav[i] == 0)
					{
						DeepTraOne(g, i);     //递归进行遍历
					}
			}
		}

	    public static void main(String[] args){
	        Scanner in = new Scanner(System.in);
	        int res;

	        int rows = 0;
	        int cols = 0;
	        rows = Integer.parseInt(in.nextLine().trim());
	        cols = Integer.parseInt(in.nextLine().trim());

	        int[][] _M = new int[rows][cols];
	        for(int _M_i=0; _M_i<rows; _M_i++) {
	            String row_x=String.valueOf(in.nextLine().trim());
	            String[] row_y=row_x.split(",");
	            for(int _M_j=0; _M_j<cols; _M_j++) {
	                _M[_M_i][_M_j] = Integer.parseInt(row_y[_M_j]);

	            }
	        }

	        if(in.hasNextLine()) {
	            in.nextLine();
	        }

	        res = findCircleNum(_M);
	        System.out.println(String.valueOf(res));

	    }

}
